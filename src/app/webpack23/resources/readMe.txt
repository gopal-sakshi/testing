webpack_with_full_momentJS ====> 699.09 Kb
we will use custom webpack config... use only france language & reduce the bundle size

webpack_with_partial_momentJS ===> only france enabled ===> 184.11 Kb

----------------------------------------------------------------------------------------------------

https://netbasal.com/environment-based-index-html-with-angular-cli-46e2e562a6da

angular/build/
"index": "src/index.html"

But, sometimes we need to alter our applicationâ€™s index.html file, based on the environment. 
- like adding some analytics scripts to our production environment
- so, we create an additional index.html file for our production environment, and use it when building for production:

"builder": "@angular-devkit/build-angular:browser",
"options": { "index": "src/index.html" },
"configurations": {
            "production": { "index": "src/production/index.html" }          // over-riding here
        }

But, we need to maintain two HTML index files.


indexTransform is a path (relative to the workspace root) to a .js or .ts file
- that exports a transformation function for index.html. 
- The function receives target options & original index.html content (generated by Angular CLI)
- and returns a new content as a string or a Promise:
------------------------------------------------------------------------------------------------------------

https://www.freecodecamp.org/news/how-to-configure-webpack-4-with-angular-7-a-complete-guide-9a23c879f471/

some stuff from above article

vendor.ts ===========> only imports the application's third-party modules.
polyfills.ts 
- we need polyfills to run an Angular application in most browsers
- This bundle file will load first 
    so this is a good place to configure the browser environment for production (or) development.

html-loader
sass-loader; css-loader; 
to-string-loader ===> as we need to have style as a string
CleanWebpackPlugin
HtmlWebpackPlugin


angular-router-loader ========> that enables string-based module loading with the Angular Router.
angular2-template-loader =====> is a chain-to loader that inlines all html & styles in Angular components.
awesome-typescript-loader ====> uses dependency resolution to build modules dependency graph. 
                                    This relatively speeds up the build process.
babel-loader =================> allows transpiling JavaScript files

--hot enables webpack Hot Module Replacement (HMR). 
    It exchanges, adds, removes modules while an application is running, without a full reload.


